---
import { IconChevronLeft, IconChevronRight } from "@tabler/icons-react";

const { images } = Astro.props;
---
<div id="gallery" class="hidden">
  <button
    id="left"
    class="fixed top-1/2 -translate-y-1/2 z-50 left-4 bg-white/25 hover:bg-white rounded-full p-4 cursor-pointer shadow-lg"
  >
    <IconChevronLeft />
  </button>
  <button
    id="right"
    class="fixed top-1/2 -translate-y-1/2 z-50 right-4 bg-white/25 hover:bg-white rounded-full p-4 cursor-pointer shadow-lg"
  >
    <IconChevronRight />
  </button>
  <div class="fixed bg-black/50 inset-0 z-40 backdrop-blur-sm" id="overlay">
    <div class="flex w-full items-center h-full snap-x snap-mandatory scroll-smooth overflow-x-auto z-50" id="images">
      {images?.map((image, i) => (
        <div class="m-8 max-h-full h-full w-full flex justify-center items-center shrink-0 p-4 snap-center">
          <img
            src={image.src}
            alt={image.alt}
            class="full-image object-contain max-w-full max-h-full"
          />
        </div>
      ))}
    </div>
  </div>
</div>
<script>
  const gallery = document.getElementById("gallery");
  const images = document.getElementById("images");
  const left = document.getElementById("left");
  const right = document.getElementById("right");
  const overlay = document.getElementById("overlay");
  const fullImages = document.getElementsByClassName("full-image");

  left.addEventListener("click", () => scrollLeft());
  right.addEventListener("click", () => scrollRight());
  overlay.addEventListener("click", () => close());
  Array.from(fullImages).forEach((fullImage, index) => {
    fullImage.addEventListener("click", (e) => {
      e.stopPropagation();
    });
  });

  function scrollLeft() {
    images.scrollLeft -= images.clientWidth/2;
  }

  function scrollRight() {
    images.scrollLeft += images.clientWidth;
  }

  function close() {
    gallery.classList.add("hidden");
  }

  document.onkeydown = function(event) {
    const key = event.key || event.keyCode;

    switch (true) {
      case key === "Escape" || key === 27:
        close();
        break;
      case key === "ArrowLeft" || key === 37:
        console.log("ArrowLeft");
        scrollLeft();
        break;
      case key === "ArrowRight" || key === 39:
        console.log("ArrowRight");
        scrollRight();
        break;
      default:
        break;
    }
  };
</script>
